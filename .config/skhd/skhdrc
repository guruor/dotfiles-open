#!/usr/bin/env bash
# skhd --observe, use this to get the keycode
# Hyper = Left Control + Shift + Alt + Winkey
# Meh = Left Control + Shift + Alt

# Show system statistics
fn + lalt - 1 : "${HOME}"/.config/yabai/scripts/show_cpu.sh
fn + lalt - 2 : "${HOME}"/.config/yabai/scripts/show_mem.sh
fn + lalt - 3 : "${HOME}"/.config/yabai/scripts/show_bat.sh
fn + lalt - 4 : "${HOME}"/.config/yabai/scripts/show_disk.sh
fn + lalt - 5 : "${HOME}"/.config/yabai/scripts/show_song.sh

# Shortcuts with meh key
meh - q : yabai -m window --close
meh - j : yabai -m window --focus south
meh - k : yabai -m window --focus north

# Shortcuts to some common GUI apps
# hyper - b : yabai -m window --focus "$(yabai -m query --windows | jq 'map(select(.app == "Brave Browser")) | .[0].id')"
hyper - b : open -a "Brave Browser"
hyper - g : open -a "Google Chrome"
hyper - f : open -a "Firefox"
hyper - m : open -a "Miro"
hyper - n : open -a "Notion"
hyper - o : open -a "Microsoft Outlook"
hyper - s : open -a "Slack"
hyper - z : open -a "zoom.us"

# meh - h : yabai -m window --focus west
# meh - l : yabai -m window --focus east

# Toggle layout stacking/bsp
meh - t : yabai -m space --layout "$(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "stack" else "bsp" end')"

# Focus previous window
meh - h : yabai -m query --spaces --space \
  | jq -re ".index" \
  | xargs -I{} yabai -m query --windows --space {} \
  | jq -sre 'add | map(select(."is-minimized"==false)) | sort_by(.display, .frame.y, .frame.x, .id) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $has_index > 0 then nth($has_index - 1).id else nth($array_length - 1).id end' \
  | xargs -I{} yabai -m window --focus {}

# Focus next window
meh - l : yabai -m query --spaces --space \
  | jq -re ".index" \
  | xargs -I{} yabai -m query --windows --space {} \
  | jq -sre 'add | map(select(."is-minimized"==false)) | sort_by(.display, .frame.y, .frame.x, .id) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $array_length - 1 > $has_index then nth($has_index + 1).id else nth(0).id end' \
  | xargs -I{} yabai -m window --focus {}


# meh - return : "${HOME}"/.config/yabai/scripts/open_iterm2.sh
meh - return : openterm --title "New window"
meh - space : yabai -m window --warp east; yabai -m window --focus west # Move window to left and focus
meh - 0x2B : "${HOME}"/.config/yabai/scripts/toggle_terminal_window.sh "Pad1" "scratchpad Servers" # Mapping comma(,) to open floating terminal
meh - 0x2F : "${HOME}"/.config/yabai/scripts/toggle_terminal_window.sh "Pad2" "scratchpad Pad" # Mapping comma(.) to open floating terminal
meh - 0x2C : "${HOME}"/.config/yabai/scripts/toggle_terminal_window.sh "Pad3" "scratchpad Code" # Mapping question mark button (?)
meh - 0x29 : open -a "Google Chrome"  # Mapping semicolon(;) to open floating terminal
meh - 0x27 : open -a "zoom.us" # Mapping apostrophe(')
meh - o : openterm --title "File Manager" --shell "$SHELL" --cmd-str "yazi; $SHELL"
meh - n : "${HOME}"/.config/yabai/scripts/toggle_terminal_window.sh "Notes" "notetaker"
meh - r : "${HOME}"/.config/yabai/scripts/toggle_terminal_window.sh "Bottom" "btm -b" # Opens process monitoring tool
meh - m : "${HOME}"/.config/yabai/scripts/toggle_terminal_window.sh "Ncmpcpp" "mopidy > /dev/null 2>&1 &; ncmpcpp" # Opens music player
meh - p : mpc toggle # Toggle play/pause for mpd
meh - 0x21 : mpc seek -10 # Seek music 10 seconds backward with meh + [
meh - 0x1E : mpc seek +10 # Seek music 10 seconds forward with meh + ]
meh - 0x1B : osascript -e 'set volume output volume (output volume of (get volume settings)) - 10' # Volume down with meh + -
meh - 0x18 : osascript -e 'set volume output volume (output volume of (get volume settings)) + 10' # Volume down with meh + +

# Switch space, requires SIP to be disabled, handling the same with mac keyboard shortcuts for mission control
# alt - 1 : yabai -m space --focus 1
# alt - 2 : yabai -m space --focus 2
# alt - 3 : yabai -m space --focus 3
# alt - 4 : yabai -m space --focus 4

# Moving windows
shift + alt - h : yabai -m window --warp west
shift + alt - j : yabai -m window --warp south
shift + alt - k : yabai -m window --warp north
shift + alt - l : yabai -m window --warp east

# Move focus container to workspace
shift + alt - m : yabai -m window --space last; yabai -m space --focus last
shift + alt - p : yabai -m window --space prev; yabai -m space --focus prev
shift + alt - n : yabai -m window --space next; yabai -m space --focus next
shift + alt - 1 : yabai -m window --space 1; yabai -m space --focus 1
shift + alt - 2 : yabai -m window --space 2; yabai -m space --focus 2
shift + alt - 3 : yabai -m window --space 3; yabai -m space --focus 3
shift + alt - 4 : yabai -m window --space 4; yabai -m space --focus 4
shift + alt - 5 : yabai -m window --space 5; yabai -m space --focus 5
shift + alt - 6 : yabai -m window --space 6; yabai -m space --focus 6
shift + alt - 7 : yabai -m window --space 7; yabai -m space --focus 7
shift + alt - 8 : yabai -m window --space 8; yabai -m space --focus 8
shift + alt - 9 : yabai -m window --space 9; yabai -m space --focus 9

# Resize windows
lctrl + alt - h : yabai -m window --resize left:-10:0; \
                  yabai -m window --resize right:-10:0
lctrl + alt - j : yabai -m window --resize bottom:0:10; \
                  yabai -m window --resize top:0:10
lctrl + alt - k : yabai -m window --resize top:0:-10; \
                  yabai -m window --resize bottom:0:-10
lctrl + alt - l : yabai -m window --resize right:10:0; \
                  yabai -m window --resize left:10:0

# Equalize size of windows
lctrl + alt - e : yabai -m space --balance

# Enable / Disable gaps in current workspace
lctrl + alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# Rotate windows clockwise and anticlockwise
alt - r         : yabai -m space --rotate 270
shift + alt - r : yabai -m space --rotate 90

# Rotate on X and Y Axis
shift + alt - x : yabai -m space --mirror x-axis
shift + alt - y : yabai -m space --mirror y-axis

# Set insertion point for focused container
shift + lctrl + alt - h : yabai -m window --insert west
shift + lctrl + alt - j : yabai -m window --insert south
shift + lctrl + alt - k : yabai -m window --insert north
shift + lctrl + alt - l : yabai -m window --insert east

# Float / Unfloat window
# grid=<rows>:<cols>:<start-x>:<start-y>:<width>:<height>
shift + alt - space : \
    yabai -m window --toggle float; \
    yabai -m window --grid "10:16:7:5:16:10"

# Restart Yabai
hyper - r : yabai --restart-service

# Make window native fullscreen
alt - f         : "${HOME}"/.config/yabai/scripts/yabai_toggle_zoom.sh
shift + alt - f : yabai -m window --toggle native-fullscreen
