# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# set -g @plugin 'christoomey/vim-tmux-navigator' # Switch panes with C-[h,j,k,l,\], same for vim windows
set -g @plugin 'laktak/extrakto' # Extracts the text from current pane and copies to clipboard

# Auto load tmux session along with vim sessions
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-dir "$XDG_DATA_HOME/tmux/resurrect"
# https://github.com/tmux-plugins/tmux-continuum plugin config
set -g @continuum-restore 'on'
# Commenting these, because they are causing `persistence_deception` issue with SentinalOne
# set -g @continuum-boot 'on'
# set -g @continuum-boot-options 'kitty,fullscreen'
set-option -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
# Auto hides tmux status bar post certain seconds
set -g @status_autohide_enabled "0"
set -g @status_autohide_delay "1"

# Default terminal, we should ideally be using screen-256color to distinguise between serminal $TERM with tmux $TERM
# Use below commands to add `tmux-256color` support, this will avoid duplicate (repeat) character issue, if doesn't work use `screen-256color`
# https://stackoverflow.com/questions/45931164/duplicated-characters-and-non-updating-input-using-tmux-in-zsh/74042519#74042519
## brew install ncurses
## $(brew --prefix)/opt/ncurses/bin/infocmp tmux-256color > ~/.config/tmux/tmux-256color.info
## tic -xe tmux-256color ~/.config/tmux/tmux-256color.info
## infocmp tmux-256color | head
## Or use tmux-fix-terminfo script
set -g default-terminal "tmux-256color"

# Enable RGB color if running in xterm, alacritty or st
set -ga terminal-overrides ",*256col*:Tc,alacritty:Tc,xterm-kitty:Tc,xterm-ghostty:Tc"

set -sa terminal-features ',*256col*:RGB,alacritty:RGB,xterm-kitty:RGB,xterm-ghostty:RGB'

# Use vim key bindings
set-option -g mode-keys vi
set-option -g status-keys vi

# Turn the mouse on
set-option -g mouse on

# Time in milliseconds for which tmux waits after an escape
set-option -g escape-time 0

# Enable supported focus events
set-option -g focus-events on

# History settings
set-option -g history-limit 10000
set-option -g history-file ~/.config/tmux/tmuxhistory

# Activity
set-option -g monitor-activity on
set-option -g visual-activity off
# Needed to show image using image.nvim
set-option -gq allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# Start window index at 1
set-option -g base-index 1

# Start pane index at 1
set-option -g pane-base-index 1

# Rename window to reflect current program
set-option -g -w automatic-rename on

# Renumber windows when one is closed
set-option -g renumber-windows on

# No bells at all
set-option -g bell-action none

# Unbind default prefix key
unbind-key C-b

# Set default prefix key
set-option -g prefix C-a

# Bind "C-a C-a" to send "C-a"
bind-key C-a send-prefix

# Reload configuration
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "~/.config/tmux/tmux.conf reloaded"

# Switch windows
unbind-key n
bind-key -n M-p previous-window
bind-key -n M-n next-window
bind-key -n M-1 select-window -t:1
bind-key -n M-2 select-window -t:2
bind-key -n M-3 select-window -t:3
bind-key -n M-4 select-window -t:4
bind-key -n M-5 select-window -t:5
bind-key -n M-6 select-window -t:6
bind-key -n M-7 select-window -t:7
bind-key -n M-8 select-window -t:8
bind-key -n M-9 select-window -t:9
bind-key -n M-0 select-window -t:10

# Displays the status bar
bind-key T set status

# Disabled `christoomey/vim-tmux-navigator`, below bindings works for my use case
# https://github.com/christoomey/vim-tmux-navigator/issues/188
# Smart pane switching with awareness of vim and fzf
forward_programs="view|n?vim?|fzf"

should_forward="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?($forward_programs)(diff)?$'"

bind -n C-h if-shell "$should_forward" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$should_forward" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$should_forward" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$should_forward" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$should_forward" "send-keys C-\\" "select-pane -l"

# Split pane with same directory
unbind-key '"'
unbind-key '%'
bind-key '-' split-window -v -c "#{pane_current_path}"
bind-key '\' split-window -h -c "#{pane_current_path}"
bind-key '_' split-window -fv -c "#{pane_current_path}"
bind-key '|' split-window -fh -c "#{pane_current_path}"

# Resize panes
bind-key -n M-H resize-pane -L 2
bind-key -n M-J resize-pane -D 1
bind-key -n M-K resize-pane -U 1
bind-key -n M-L resize-pane -R 2

# Toggle zoom
bind-key -n M-z resize-pane -Z

# Move panes
unbind-key '{'
unbind-key '}'
bind-key -r H swap-pane -U
bind-key -r L swap-pane -D

# Kill pane
bind-key x kill-pane

# Swap windows across themselves
bind-key -r '<' swap-window -t -1 \; select-window -t:-1
bind-key -r '>' swap-window -t +1 \; select-window -t:+1

# Kill window
unbind-key '&'
bind-key X kill-window
bind-key K kill-window -a

# Enter copy mode
bind-key -n M-v copy-mode

# Select
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Copy
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Paste
bind-key p paste-buffer -s ""
bind-key P choose-buffer "paste-buffer -b '%%' -s ''"

# Make mouse drag end behavior configurable
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi WheelUpPane select-pane \; send-keys -t '{mouse}' -X clear-selection \; send-keys -t '{mouse}' -X -N 5 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane \; send-keys -t '{mouse}' -X clear-selection \; send-keys -t '{mouse}' -X -N 5 scroll-down

# Jump search mode with prefix
bind-key '/' copy-mode \; send-keys "/"
bind-key '?' copy-mode \; send-keys "?"

# Pane number indicator
set-option -g display-panes-time 2000

# Clock mode
set-option -g clock-mode-style 24

# Session, Window and pane switch event
# set-hook window-pane-changed display-panes
# set-hook session-window-changed display-panes

# set-hook pane-focus-in 'run-shell "$HOME/.config/tmux/tmux.statusline-autohide.tmux"'

set -g @resurrect-hook-post-restore-all 'bash ~/.config/tmux/hooks/resurrect-hook-post-restore-all'

# Status setting from https://github.com/egel/tmux-gruvbox
#########
set-option -g status "on"
# set-option -g status-style none
## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-interval 5
set-option -g status-position bottom
set-option -g status-justify absolute-centre
set-option -g status-left-style none
set-option -g status-left-length "90"
set-option -g status-right-style none
set-option -g status-right-length "90"
set-window-option -g window-status-separator ""
#########

# Loading theme based on condition
if-shell '[[ -f "$HOME/.cache/dark-mode.off" ]]' {
    source-file "$HOME/.config/tmux/tmux.light.conf"
} {
    source-file "$HOME/.config/tmux/tmux.dark.conf"
}

run-shell "~/.config/tmux/tmux.statusline-autohide.tmux"

set-environment -g TMUX_PLUGIN_MANAGER_PATH "~/.config/tmux/plugins"
# Auto install tpm if not exist and install the plugins on first run
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
